// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: graduationWork.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "graduationWork.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace graduationWork {
class g_Vector3DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<g_Vector3> {
} _g_Vector3_default_instance_;
class g_TransformDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<g_Transform> {
} _g_Transform_default_instance_;
class g_MessageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<g_Message> {
} _g_Message_default_instance_;
class g_DataSizeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<g_DataSize> {
} _g_DataSize_default_instance_;

namespace protobuf_graduationWork_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(g_Vector3, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(g_Vector3, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(g_Vector3, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(g_Vector3, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(g_Vector3, z_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(g_Transform, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(g_Transform, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(g_Transform, packetnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(g_Transform, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(g_Transform, rotation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(g_Transform, scale_),
  3,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(g_Message, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(g_Message, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(g_Message, message_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(g_DataSize, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(g_DataSize, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(g_DataSize, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(g_DataSize, size_),
  0,
  1,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 7, sizeof(g_Vector3)},
  { 10, 18, sizeof(g_Transform)},
  { 22, 27, sizeof(g_Message)},
  { 28, 34, sizeof(g_DataSize)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_g_Vector3_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_g_Transform_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_g_Message_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_g_DataSize_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "graduationWork.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace

void TableStruct::Shutdown() {
  _g_Vector3_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _g_Transform_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _g_Message_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _g_DataSize_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _g_Vector3_default_instance_.DefaultConstruct();
  _g_Transform_default_instance_.DefaultConstruct();
  _g_Message_default_instance_.DefaultConstruct();
  _g_DataSize_default_instance_.DefaultConstruct();
  _g_Transform_default_instance_.get_mutable()->position_ = const_cast< ::graduationWork::g_Vector3*>(
      ::graduationWork::g_Vector3::internal_default_instance());
  _g_Transform_default_instance_.get_mutable()->rotation_ = const_cast< ::graduationWork::g_Vector3*>(
      ::graduationWork::g_Vector3::internal_default_instance());
  _g_Transform_default_instance_.get_mutable()->scale_ = const_cast< ::graduationWork::g_Vector3*>(
      ::graduationWork::g_Vector3::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\024graduationWork.proto\022\016graduationWork\","
      "\n\tg_Vector3\022\t\n\001x\030\001 \002(\002\022\t\n\001y\030\002 \002(\002\022\t\n\001z\030\003"
      " \002(\002\"\244\001\n\013g_Transform\022\021\n\tpacketNum\030\001 \002(\005\022"
      "+\n\010position\030\002 \002(\0132\031.graduationWork.g_Vec"
      "tor3\022+\n\010rotation\030\003 \002(\0132\031.graduationWork."
      "g_Vector3\022(\n\005scale\030\004 \002(\0132\031.graduationWor"
      "k.g_Vector3\"\034\n\tg_Message\022\017\n\007message\030\001 \002("
      "\014\"D\n\ng_DataSize\022(\n\004type\030\001 \002(\0162\032.graduati"
      "onWork.g_DataType\022\014\n\004size\030\002 \002(\005*(\n\ng_Dat"
      "aType\022\013\n\007MESSAGE\020\000\022\r\n\tTRANSFORM\020\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 393);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "graduationWork.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_graduationWork_2eproto

const ::google::protobuf::EnumDescriptor* g_DataType_descriptor() {
  protobuf_graduationWork_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_graduationWork_2eproto::file_level_enum_descriptors[0];
}
bool g_DataType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int g_Vector3::kXFieldNumber;
const int g_Vector3::kYFieldNumber;
const int g_Vector3::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

g_Vector3::g_Vector3()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_graduationWork_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:graduationWork.g_Vector3)
}
g_Vector3::g_Vector3(const g_Vector3& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:graduationWork.g_Vector3)
}

void g_Vector3::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&x_, 0, reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_) + sizeof(z_));
}

g_Vector3::~g_Vector3() {
  // @@protoc_insertion_point(destructor:graduationWork.g_Vector3)
  SharedDtor();
}

void g_Vector3::SharedDtor() {
}

void g_Vector3::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* g_Vector3::descriptor() {
  protobuf_graduationWork_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_graduationWork_2eproto::file_level_metadata[0].descriptor;
}

const g_Vector3& g_Vector3::default_instance() {
  protobuf_graduationWork_2eproto::InitDefaults();
  return *internal_default_instance();
}

g_Vector3* g_Vector3::New(::google::protobuf::Arena* arena) const {
  g_Vector3* n = new g_Vector3;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void g_Vector3::Clear() {
// @@protoc_insertion_point(message_clear_start:graduationWork.g_Vector3)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&x_, 0, reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_) + sizeof(z_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool g_Vector3::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:graduationWork.g_Vector3)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float x = 1;
      case 1: {
        if (tag == 13u) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float y = 2;
      case 2: {
        if (tag == 21u) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float z = 3;
      case 3: {
        if (tag == 29u) {
          set_has_z();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:graduationWork.g_Vector3)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:graduationWork.g_Vector3)
  return false;
#undef DO_
}

void g_Vector3::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:graduationWork.g_Vector3)
  // required float x = 1;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // required float y = 2;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // required float z = 3;
  if (has_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:graduationWork.g_Vector3)
}

::google::protobuf::uint8* g_Vector3::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:graduationWork.g_Vector3)
  // required float x = 1;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // required float y = 2;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // required float z = 3;
  if (has_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:graduationWork.g_Vector3)
  return target;
}

size_t g_Vector3::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:graduationWork.g_Vector3)
  size_t total_size = 0;

  if (has_x()) {
    // required float x = 1;
    total_size += 1 + 4;
  }

  if (has_y()) {
    // required float y = 2;
    total_size += 1 + 4;
  }

  if (has_z()) {
    // required float z = 3;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t g_Vector3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:graduationWork.g_Vector3)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required float x = 1;
    total_size += 1 + 4;

    // required float y = 2;
    total_size += 1 + 4;

    // required float z = 3;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void g_Vector3::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:graduationWork.g_Vector3)
  GOOGLE_DCHECK_NE(&from, this);
  const g_Vector3* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const g_Vector3>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:graduationWork.g_Vector3)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:graduationWork.g_Vector3)
    MergeFrom(*source);
  }
}

void g_Vector3::MergeFrom(const g_Vector3& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:graduationWork.g_Vector3)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 7u) {
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
    if (from.has_z()) {
      set_z(from.z());
    }
  }
}

void g_Vector3::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:graduationWork.g_Vector3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void g_Vector3::CopyFrom(const g_Vector3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:graduationWork.g_Vector3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool g_Vector3::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void g_Vector3::Swap(g_Vector3* other) {
  if (other == this) return;
  InternalSwap(other);
}
void g_Vector3::InternalSwap(g_Vector3* other) {
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(z_, other->z_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata g_Vector3::GetMetadata() const {
  protobuf_graduationWork_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_graduationWork_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// g_Vector3

// required float x = 1;
bool g_Vector3::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void g_Vector3::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
void g_Vector3::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
void g_Vector3::clear_x() {
  x_ = 0;
  clear_has_x();
}
float g_Vector3::x() const {
  // @@protoc_insertion_point(field_get:graduationWork.g_Vector3.x)
  return x_;
}
void g_Vector3::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:graduationWork.g_Vector3.x)
}

// required float y = 2;
bool g_Vector3::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void g_Vector3::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
void g_Vector3::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
void g_Vector3::clear_y() {
  y_ = 0;
  clear_has_y();
}
float g_Vector3::y() const {
  // @@protoc_insertion_point(field_get:graduationWork.g_Vector3.y)
  return y_;
}
void g_Vector3::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:graduationWork.g_Vector3.y)
}

// required float z = 3;
bool g_Vector3::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void g_Vector3::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
void g_Vector3::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
void g_Vector3::clear_z() {
  z_ = 0;
  clear_has_z();
}
float g_Vector3::z() const {
  // @@protoc_insertion_point(field_get:graduationWork.g_Vector3.z)
  return z_;
}
void g_Vector3::set_z(float value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:graduationWork.g_Vector3.z)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int g_Transform::kPacketNumFieldNumber;
const int g_Transform::kPositionFieldNumber;
const int g_Transform::kRotationFieldNumber;
const int g_Transform::kScaleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

g_Transform::g_Transform()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_graduationWork_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:graduationWork.g_Transform)
}
g_Transform::g_Transform(const g_Transform& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position()) {
    position_ = new ::graduationWork::g_Vector3(*from.position_);
  } else {
    position_ = NULL;
  }
  if (from.has_rotation()) {
    rotation_ = new ::graduationWork::g_Vector3(*from.rotation_);
  } else {
    rotation_ = NULL;
  }
  if (from.has_scale()) {
    scale_ = new ::graduationWork::g_Vector3(*from.scale_);
  } else {
    scale_ = NULL;
  }
  packetnum_ = from.packetnum_;
  // @@protoc_insertion_point(copy_constructor:graduationWork.g_Transform)
}

void g_Transform::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&position_, 0, reinterpret_cast<char*>(&packetnum_) -
    reinterpret_cast<char*>(&position_) + sizeof(packetnum_));
}

g_Transform::~g_Transform() {
  // @@protoc_insertion_point(destructor:graduationWork.g_Transform)
  SharedDtor();
}

void g_Transform::SharedDtor() {
  if (this != internal_default_instance()) {
    delete position_;
  }
  if (this != internal_default_instance()) {
    delete rotation_;
  }
  if (this != internal_default_instance()) {
    delete scale_;
  }
}

void g_Transform::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* g_Transform::descriptor() {
  protobuf_graduationWork_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_graduationWork_2eproto::file_level_metadata[1].descriptor;
}

const g_Transform& g_Transform::default_instance() {
  protobuf_graduationWork_2eproto::InitDefaults();
  return *internal_default_instance();
}

g_Transform* g_Transform::New(::google::protobuf::Arena* arena) const {
  g_Transform* n = new g_Transform;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void g_Transform::Clear() {
// @@protoc_insertion_point(message_clear_start:graduationWork.g_Transform)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_position()) {
      GOOGLE_DCHECK(position_ != NULL);
      position_->::graduationWork::g_Vector3::Clear();
    }
    if (has_rotation()) {
      GOOGLE_DCHECK(rotation_ != NULL);
      rotation_->::graduationWork::g_Vector3::Clear();
    }
    if (has_scale()) {
      GOOGLE_DCHECK(scale_ != NULL);
      scale_->::graduationWork::g_Vector3::Clear();
    }
  }
  packetnum_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool g_Transform::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:graduationWork.g_Transform)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 packetNum = 1;
      case 1: {
        if (tag == 8u) {
          set_has_packetnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &packetnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .graduationWork.g_Vector3 position = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .graduationWork.g_Vector3 rotation = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rotation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .graduationWork.g_Vector3 scale = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_scale()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:graduationWork.g_Transform)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:graduationWork.g_Transform)
  return false;
#undef DO_
}

void g_Transform::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:graduationWork.g_Transform)
  // required int32 packetNum = 1;
  if (has_packetnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->packetnum(), output);
  }

  // required .graduationWork.g_Vector3 position = 2;
  if (has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->position_, output);
  }

  // required .graduationWork.g_Vector3 rotation = 3;
  if (has_rotation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->rotation_, output);
  }

  // required .graduationWork.g_Vector3 scale = 4;
  if (has_scale()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->scale_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:graduationWork.g_Transform)
}

::google::protobuf::uint8* g_Transform::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:graduationWork.g_Transform)
  // required int32 packetNum = 1;
  if (has_packetnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->packetnum(), target);
  }

  // required .graduationWork.g_Vector3 position = 2;
  if (has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->position_, false, target);
  }

  // required .graduationWork.g_Vector3 rotation = 3;
  if (has_rotation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->rotation_, false, target);
  }

  // required .graduationWork.g_Vector3 scale = 4;
  if (has_scale()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->scale_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:graduationWork.g_Transform)
  return target;
}

size_t g_Transform::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:graduationWork.g_Transform)
  size_t total_size = 0;

  if (has_position()) {
    // required .graduationWork.g_Vector3 position = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->position_);
  }

  if (has_rotation()) {
    // required .graduationWork.g_Vector3 rotation = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->rotation_);
  }

  if (has_scale()) {
    // required .graduationWork.g_Vector3 scale = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->scale_);
  }

  if (has_packetnum()) {
    // required int32 packetNum = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->packetnum());
  }

  return total_size;
}
size_t g_Transform::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:graduationWork.g_Transform)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required .graduationWork.g_Vector3 position = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->position_);

    // required .graduationWork.g_Vector3 rotation = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->rotation_);

    // required .graduationWork.g_Vector3 scale = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->scale_);

    // required int32 packetNum = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->packetnum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void g_Transform::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:graduationWork.g_Transform)
  GOOGLE_DCHECK_NE(&from, this);
  const g_Transform* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const g_Transform>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:graduationWork.g_Transform)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:graduationWork.g_Transform)
    MergeFrom(*source);
  }
}

void g_Transform::MergeFrom(const g_Transform& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:graduationWork.g_Transform)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 15u) {
    if (from.has_position()) {
      mutable_position()->::graduationWork::g_Vector3::MergeFrom(from.position());
    }
    if (from.has_rotation()) {
      mutable_rotation()->::graduationWork::g_Vector3::MergeFrom(from.rotation());
    }
    if (from.has_scale()) {
      mutable_scale()->::graduationWork::g_Vector3::MergeFrom(from.scale());
    }
    if (from.has_packetnum()) {
      set_packetnum(from.packetnum());
    }
  }
}

void g_Transform::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:graduationWork.g_Transform)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void g_Transform::CopyFrom(const g_Transform& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:graduationWork.g_Transform)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool g_Transform::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  if (has_position()) {
    if (!this->position_->IsInitialized()) return false;
  }
  if (has_rotation()) {
    if (!this->rotation_->IsInitialized()) return false;
  }
  if (has_scale()) {
    if (!this->scale_->IsInitialized()) return false;
  }
  return true;
}

void g_Transform::Swap(g_Transform* other) {
  if (other == this) return;
  InternalSwap(other);
}
void g_Transform::InternalSwap(g_Transform* other) {
  std::swap(position_, other->position_);
  std::swap(rotation_, other->rotation_);
  std::swap(scale_, other->scale_);
  std::swap(packetnum_, other->packetnum_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata g_Transform::GetMetadata() const {
  protobuf_graduationWork_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_graduationWork_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// g_Transform

// required int32 packetNum = 1;
bool g_Transform::has_packetnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void g_Transform::set_has_packetnum() {
  _has_bits_[0] |= 0x00000008u;
}
void g_Transform::clear_has_packetnum() {
  _has_bits_[0] &= ~0x00000008u;
}
void g_Transform::clear_packetnum() {
  packetnum_ = 0;
  clear_has_packetnum();
}
::google::protobuf::int32 g_Transform::packetnum() const {
  // @@protoc_insertion_point(field_get:graduationWork.g_Transform.packetNum)
  return packetnum_;
}
void g_Transform::set_packetnum(::google::protobuf::int32 value) {
  set_has_packetnum();
  packetnum_ = value;
  // @@protoc_insertion_point(field_set:graduationWork.g_Transform.packetNum)
}

// required .graduationWork.g_Vector3 position = 2;
bool g_Transform::has_position() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void g_Transform::set_has_position() {
  _has_bits_[0] |= 0x00000001u;
}
void g_Transform::clear_has_position() {
  _has_bits_[0] &= ~0x00000001u;
}
void g_Transform::clear_position() {
  if (position_ != NULL) position_->::graduationWork::g_Vector3::Clear();
  clear_has_position();
}
const ::graduationWork::g_Vector3& g_Transform::position() const {
  // @@protoc_insertion_point(field_get:graduationWork.g_Transform.position)
  return position_ != NULL ? *position_
                         : *::graduationWork::g_Vector3::internal_default_instance();
}
::graduationWork::g_Vector3* g_Transform::mutable_position() {
  set_has_position();
  if (position_ == NULL) {
    position_ = new ::graduationWork::g_Vector3;
  }
  // @@protoc_insertion_point(field_mutable:graduationWork.g_Transform.position)
  return position_;
}
::graduationWork::g_Vector3* g_Transform::release_position() {
  // @@protoc_insertion_point(field_release:graduationWork.g_Transform.position)
  clear_has_position();
  ::graduationWork::g_Vector3* temp = position_;
  position_ = NULL;
  return temp;
}
void g_Transform::set_allocated_position(::graduationWork::g_Vector3* position) {
  delete position_;
  position_ = position;
  if (position) {
    set_has_position();
  } else {
    clear_has_position();
  }
  // @@protoc_insertion_point(field_set_allocated:graduationWork.g_Transform.position)
}

// required .graduationWork.g_Vector3 rotation = 3;
bool g_Transform::has_rotation() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void g_Transform::set_has_rotation() {
  _has_bits_[0] |= 0x00000002u;
}
void g_Transform::clear_has_rotation() {
  _has_bits_[0] &= ~0x00000002u;
}
void g_Transform::clear_rotation() {
  if (rotation_ != NULL) rotation_->::graduationWork::g_Vector3::Clear();
  clear_has_rotation();
}
const ::graduationWork::g_Vector3& g_Transform::rotation() const {
  // @@protoc_insertion_point(field_get:graduationWork.g_Transform.rotation)
  return rotation_ != NULL ? *rotation_
                         : *::graduationWork::g_Vector3::internal_default_instance();
}
::graduationWork::g_Vector3* g_Transform::mutable_rotation() {
  set_has_rotation();
  if (rotation_ == NULL) {
    rotation_ = new ::graduationWork::g_Vector3;
  }
  // @@protoc_insertion_point(field_mutable:graduationWork.g_Transform.rotation)
  return rotation_;
}
::graduationWork::g_Vector3* g_Transform::release_rotation() {
  // @@protoc_insertion_point(field_release:graduationWork.g_Transform.rotation)
  clear_has_rotation();
  ::graduationWork::g_Vector3* temp = rotation_;
  rotation_ = NULL;
  return temp;
}
void g_Transform::set_allocated_rotation(::graduationWork::g_Vector3* rotation) {
  delete rotation_;
  rotation_ = rotation;
  if (rotation) {
    set_has_rotation();
  } else {
    clear_has_rotation();
  }
  // @@protoc_insertion_point(field_set_allocated:graduationWork.g_Transform.rotation)
}

// required .graduationWork.g_Vector3 scale = 4;
bool g_Transform::has_scale() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void g_Transform::set_has_scale() {
  _has_bits_[0] |= 0x00000004u;
}
void g_Transform::clear_has_scale() {
  _has_bits_[0] &= ~0x00000004u;
}
void g_Transform::clear_scale() {
  if (scale_ != NULL) scale_->::graduationWork::g_Vector3::Clear();
  clear_has_scale();
}
const ::graduationWork::g_Vector3& g_Transform::scale() const {
  // @@protoc_insertion_point(field_get:graduationWork.g_Transform.scale)
  return scale_ != NULL ? *scale_
                         : *::graduationWork::g_Vector3::internal_default_instance();
}
::graduationWork::g_Vector3* g_Transform::mutable_scale() {
  set_has_scale();
  if (scale_ == NULL) {
    scale_ = new ::graduationWork::g_Vector3;
  }
  // @@protoc_insertion_point(field_mutable:graduationWork.g_Transform.scale)
  return scale_;
}
::graduationWork::g_Vector3* g_Transform::release_scale() {
  // @@protoc_insertion_point(field_release:graduationWork.g_Transform.scale)
  clear_has_scale();
  ::graduationWork::g_Vector3* temp = scale_;
  scale_ = NULL;
  return temp;
}
void g_Transform::set_allocated_scale(::graduationWork::g_Vector3* scale) {
  delete scale_;
  scale_ = scale;
  if (scale) {
    set_has_scale();
  } else {
    clear_has_scale();
  }
  // @@protoc_insertion_point(field_set_allocated:graduationWork.g_Transform.scale)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int g_Message::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

g_Message::g_Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_graduationWork_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:graduationWork.g_Message)
}
g_Message::g_Message(const g_Message& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message()) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  // @@protoc_insertion_point(copy_constructor:graduationWork.g_Message)
}

void g_Message::SharedCtor() {
  _cached_size_ = 0;
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

g_Message::~g_Message() {
  // @@protoc_insertion_point(destructor:graduationWork.g_Message)
  SharedDtor();
}

void g_Message::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void g_Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* g_Message::descriptor() {
  protobuf_graduationWork_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_graduationWork_2eproto::file_level_metadata[2].descriptor;
}

const g_Message& g_Message::default_instance() {
  protobuf_graduationWork_2eproto::InitDefaults();
  return *internal_default_instance();
}

g_Message* g_Message::New(::google::protobuf::Arena* arena) const {
  g_Message* n = new g_Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void g_Message::Clear() {
// @@protoc_insertion_point(message_clear_start:graduationWork.g_Message)
  if (has_message()) {
    GOOGLE_DCHECK(!message_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*message_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool g_Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:graduationWork.g_Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes message = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:graduationWork.g_Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:graduationWork.g_Message)
  return false;
#undef DO_
}

void g_Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:graduationWork.g_Message)
  // required bytes message = 1;
  if (has_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:graduationWork.g_Message)
}

::google::protobuf::uint8* g_Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:graduationWork.g_Message)
  // required bytes message = 1;
  if (has_message()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:graduationWork.g_Message)
  return target;
}

size_t g_Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:graduationWork.g_Message)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required bytes message = 1;
  if (has_message()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->message());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void g_Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:graduationWork.g_Message)
  GOOGLE_DCHECK_NE(&from, this);
  const g_Message* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const g_Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:graduationWork.g_Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:graduationWork.g_Message)
    MergeFrom(*source);
  }
}

void g_Message::MergeFrom(const g_Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:graduationWork.g_Message)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_message()) {
    set_has_message();
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void g_Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:graduationWork.g_Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void g_Message::CopyFrom(const g_Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:graduationWork.g_Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool g_Message::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void g_Message::Swap(g_Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void g_Message::InternalSwap(g_Message* other) {
  message_.Swap(&other->message_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata g_Message::GetMetadata() const {
  protobuf_graduationWork_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_graduationWork_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// g_Message

// required bytes message = 1;
bool g_Message::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void g_Message::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
void g_Message::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
void g_Message::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
const ::std::string& g_Message::message() const {
  // @@protoc_insertion_point(field_get:graduationWork.g_Message.message)
  return message_.GetNoArena();
}
void g_Message::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:graduationWork.g_Message.message)
}
#if LANG_CXX11
void g_Message::set_message(::std::string&& value) {
  set_has_message();
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:graduationWork.g_Message.message)
}
#endif
void g_Message::set_message(const char* value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:graduationWork.g_Message.message)
}
void g_Message::set_message(const void* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:graduationWork.g_Message.message)
}
::std::string* g_Message::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:graduationWork.g_Message.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* g_Message::release_message() {
  // @@protoc_insertion_point(field_release:graduationWork.g_Message.message)
  clear_has_message();
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void g_Message::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:graduationWork.g_Message.message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int g_DataSize::kTypeFieldNumber;
const int g_DataSize::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

g_DataSize::g_DataSize()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_graduationWork_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:graduationWork.g_DataSize)
}
g_DataSize::g_DataSize(const g_DataSize& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&type_, &from.type_,
    reinterpret_cast<char*>(&size_) -
    reinterpret_cast<char*>(&type_) + sizeof(size_));
  // @@protoc_insertion_point(copy_constructor:graduationWork.g_DataSize)
}

void g_DataSize::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&type_, 0, reinterpret_cast<char*>(&size_) -
    reinterpret_cast<char*>(&type_) + sizeof(size_));
}

g_DataSize::~g_DataSize() {
  // @@protoc_insertion_point(destructor:graduationWork.g_DataSize)
  SharedDtor();
}

void g_DataSize::SharedDtor() {
}

void g_DataSize::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* g_DataSize::descriptor() {
  protobuf_graduationWork_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_graduationWork_2eproto::file_level_metadata[3].descriptor;
}

const g_DataSize& g_DataSize::default_instance() {
  protobuf_graduationWork_2eproto::InitDefaults();
  return *internal_default_instance();
}

g_DataSize* g_DataSize::New(::google::protobuf::Arena* arena) const {
  g_DataSize* n = new g_DataSize;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void g_DataSize::Clear() {
// @@protoc_insertion_point(message_clear_start:graduationWork.g_DataSize)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&type_, 0, reinterpret_cast<char*>(&size_) -
      reinterpret_cast<char*>(&type_) + sizeof(size_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool g_DataSize::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:graduationWork.g_DataSize)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .graduationWork.g_DataType type = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::graduationWork::g_DataType_IsValid(value)) {
            set_type(static_cast< ::graduationWork::g_DataType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 size = 2;
      case 2: {
        if (tag == 16u) {
          set_has_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:graduationWork.g_DataSize)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:graduationWork.g_DataSize)
  return false;
#undef DO_
}

void g_DataSize::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:graduationWork.g_DataSize)
  // required .graduationWork.g_DataType type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // required int32 size = 2;
  if (has_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:graduationWork.g_DataSize)
}

::google::protobuf::uint8* g_DataSize::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:graduationWork.g_DataSize)
  // required .graduationWork.g_DataType type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // required int32 size = 2;
  if (has_size()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->size(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:graduationWork.g_DataSize)
  return target;
}

size_t g_DataSize::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:graduationWork.g_DataSize)
  size_t total_size = 0;

  if (has_type()) {
    // required .graduationWork.g_DataType type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  if (has_size()) {
    // required int32 size = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->size());
  }

  return total_size;
}
size_t g_DataSize::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:graduationWork.g_DataSize)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .graduationWork.g_DataType type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());

    // required int32 size = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->size());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void g_DataSize::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:graduationWork.g_DataSize)
  GOOGLE_DCHECK_NE(&from, this);
  const g_DataSize* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const g_DataSize>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:graduationWork.g_DataSize)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:graduationWork.g_DataSize)
    MergeFrom(*source);
  }
}

void g_DataSize::MergeFrom(const g_DataSize& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:graduationWork.g_DataSize)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_size()) {
      set_size(from.size());
    }
  }
}

void g_DataSize::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:graduationWork.g_DataSize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void g_DataSize::CopyFrom(const g_DataSize& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:graduationWork.g_DataSize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool g_DataSize::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void g_DataSize::Swap(g_DataSize* other) {
  if (other == this) return;
  InternalSwap(other);
}
void g_DataSize::InternalSwap(g_DataSize* other) {
  std::swap(type_, other->type_);
  std::swap(size_, other->size_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata g_DataSize::GetMetadata() const {
  protobuf_graduationWork_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_graduationWork_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// g_DataSize

// required .graduationWork.g_DataType type = 1;
bool g_DataSize::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void g_DataSize::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void g_DataSize::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void g_DataSize::clear_type() {
  type_ = 0;
  clear_has_type();
}
::graduationWork::g_DataType g_DataSize::type() const {
  // @@protoc_insertion_point(field_get:graduationWork.g_DataSize.type)
  return static_cast< ::graduationWork::g_DataType >(type_);
}
void g_DataSize::set_type(::graduationWork::g_DataType value) {
  assert(::graduationWork::g_DataType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:graduationWork.g_DataSize.type)
}

// required int32 size = 2;
bool g_DataSize::has_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void g_DataSize::set_has_size() {
  _has_bits_[0] |= 0x00000002u;
}
void g_DataSize::clear_has_size() {
  _has_bits_[0] &= ~0x00000002u;
}
void g_DataSize::clear_size() {
  size_ = 0;
  clear_has_size();
}
::google::protobuf::int32 g_DataSize::size() const {
  // @@protoc_insertion_point(field_get:graduationWork.g_DataSize.size)
  return size_;
}
void g_DataSize::set_size(::google::protobuf::int32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:graduationWork.g_DataSize.size)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace graduationWork

// @@protoc_insertion_point(global_scope)
