// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: graduationWork.proto

#ifndef PROTOBUF_graduationWork_2eproto__INCLUDED
#define PROTOBUF_graduationWork_2eproto__INCLUDED

#include <string>
#include<istream>
using namespace std;
#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace graduationWork {
class DataSize;
class DataSizeDefaultTypeInternal;
extern DataSizeDefaultTypeInternal _DataSize_default_instance_;
class Message;
class MessageDefaultTypeInternal;
extern MessageDefaultTypeInternal _Message_default_instance_;
class Transform;
class TransformDefaultTypeInternal;
extern TransformDefaultTypeInternal _Transform_default_instance_;
class Vector3;
class Vector3DefaultTypeInternal;
extern Vector3DefaultTypeInternal _Vector3_default_instance_;
}  // namespace graduationWork

namespace graduationWork {

namespace protobuf_graduationWork_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_graduationWork_2eproto

enum DataType {
  MESSAGE = 0,
  TRANSFORM = 1,
  DataType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DataType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DataType_IsValid(int value);
const DataType DataType_MIN = MESSAGE;
const DataType DataType_MAX = TRANSFORM;
const int DataType_ARRAYSIZE = DataType_MAX + 1;

const ::google::protobuf::EnumDescriptor* DataType_descriptor();
inline const ::std::string& DataType_Name(DataType value) {
  return ::google::protobuf::internal::NameOfEnum(
    DataType_descriptor(), value);
}
inline bool DataType_Parse(
    const ::std::string& name, DataType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DataType>(
    DataType_descriptor(), name, value);
}
// ===================================================================

class Vector3 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:graduationWork.Vector3) */ {
 public:
  Vector3();
  virtual ~Vector3();

  Vector3(const Vector3& from);

  inline Vector3& operator=(const Vector3& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Vector3& default_instance();

  static inline const Vector3* internal_default_instance() {
    return reinterpret_cast<const Vector3*>(
               &_Vector3_default_instance_);
  }

  void Swap(Vector3* other);

  // implements Message ----------------------------------------------

  inline Vector3* New() const PROTOBUF_FINAL { return New(NULL); }

  Vector3* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Vector3& from);
  void MergeFrom(const Vector3& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Vector3* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // float y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // float z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  float z() const;
  void set_z(float value);

  // @@protoc_insertion_point(class_scope:graduationWork.Vector3)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float x_;
  float y_;
  float z_;
  mutable int _cached_size_;
  friend struct  protobuf_graduationWork_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Transform : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:graduationWork.Transform) */ {
 public:
  Transform();
  virtual ~Transform();

  Transform(const Transform& from);

  inline Transform& operator=(const Transform& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Transform& default_instance();

  static inline const Transform* internal_default_instance() {
    return reinterpret_cast<const Transform*>(
               &_Transform_default_instance_);
  }

  void Swap(Transform* other);

  // implements Message ----------------------------------------------

  inline Transform* New() const PROTOBUF_FINAL { return New(NULL); }

  Transform* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Transform& from);
  void MergeFrom(const Transform& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Transform* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .graduationWork.Vector3 position = 2;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 2;
  const ::graduationWork::Vector3& position() const;
  ::graduationWork::Vector3* mutable_position();
  ::graduationWork::Vector3* release_position();
  void set_allocated_position(::graduationWork::Vector3* position);

  // .graduationWork.Vector3 rotation = 3;
  bool has_rotation() const;
  void clear_rotation();
  static const int kRotationFieldNumber = 3;
  const ::graduationWork::Vector3& rotation() const;
  ::graduationWork::Vector3* mutable_rotation();
  ::graduationWork::Vector3* release_rotation();
  void set_allocated_rotation(::graduationWork::Vector3* rotation);

  // .graduationWork.Vector3 scale = 4;
  bool has_scale() const;
  void clear_scale();
  static const int kScaleFieldNumber = 4;
  const ::graduationWork::Vector3& scale() const;
  ::graduationWork::Vector3* mutable_scale();
  ::graduationWork::Vector3* release_scale();
  void set_allocated_scale(::graduationWork::Vector3* scale);

  // int32 packetNum = 1;
  void clear_packetnum();
  static const int kPacketNumFieldNumber = 1;
  ::google::protobuf::int32 packetnum() const;
  void set_packetnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:graduationWork.Transform)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::graduationWork::Vector3* position_;
  ::graduationWork::Vector3* rotation_;
  ::graduationWork::Vector3* scale_;
  ::google::protobuf::int32 packetnum_;
  mutable int _cached_size_;
  friend struct  protobuf_graduationWork_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Message : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:graduationWork.Message) */ {
 public:
  Message();
  virtual ~Message();

  Message(const Message& from);
  Message(string& str);
  inline Message& operator=(const Message& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Message& default_instance();

  static inline const Message* internal_default_instance() {
    return reinterpret_cast<const Message*>(
               &_Message_default_instance_);
  }

  void Swap(Message* other);

  // implements Message ----------------------------------------------

  inline Message* New() const PROTOBUF_FINAL { return New(NULL); }

  Message* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Message& from);
  void MergeFrom(const Message& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Message* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes message = 1;
  void clear_message();
  static const int kMessageFieldNumber = 1;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const void* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:graduationWork.Message)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  mutable int _cached_size_;
  friend struct  protobuf_graduationWork_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DataSize : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:graduationWork.DataSize) */ {
 public:
  DataSize();
  virtual ~DataSize();
  DataSize(int size, DataType type);
  DataSize(const DataSize& from);

  inline DataSize& operator=(const DataSize& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DataSize& default_instance();

  static inline const DataSize* internal_default_instance() {
    return reinterpret_cast<const DataSize*>(
               &_DataSize_default_instance_);
  }

  void Swap(DataSize* other);

  // implements Message ----------------------------------------------

  inline DataSize* New() const PROTOBUF_FINAL { return New(NULL); }

  DataSize* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DataSize& from);
  void MergeFrom(const DataSize& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DataSize* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .graduationWork.DataType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::graduationWork::DataType type() const;
  void set_type(::graduationWork::DataType value);

  // int32 size = 2;
  void clear_size();
  static const int kSizeFieldNumber = 2;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:graduationWork.DataSize)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int type_;
  ::google::protobuf::int32 size_;
  mutable int _cached_size_;
  friend struct  protobuf_graduationWork_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Vector3

// float x = 1;
inline void Vector3::clear_x() {
  x_ = 0;
}
inline float Vector3::x() const {
  // @@protoc_insertion_point(field_get:graduationWork.Vector3.x)
  return x_;
}
inline void Vector3::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:graduationWork.Vector3.x)
}

// float y = 2;
inline void Vector3::clear_y() {
  y_ = 0;
}
inline float Vector3::y() const {
  // @@protoc_insertion_point(field_get:graduationWork.Vector3.y)
  return y_;
}
inline void Vector3::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:graduationWork.Vector3.y)
}

// float z = 3;
inline void Vector3::clear_z() {
  z_ = 0;
}
inline float Vector3::z() const {
  // @@protoc_insertion_point(field_get:graduationWork.Vector3.z)
  return z_;
}
inline void Vector3::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:graduationWork.Vector3.z)
}

// -------------------------------------------------------------------

// Transform

// int32 packetNum = 1;
inline void Transform::clear_packetnum() {
  packetnum_ = 0;
}
inline ::google::protobuf::int32 Transform::packetnum() const {
  // @@protoc_insertion_point(field_get:graduationWork.Transform.packetNum)
  return packetnum_;
}
inline void Transform::set_packetnum(::google::protobuf::int32 value) {
  
  packetnum_ = value;
  // @@protoc_insertion_point(field_set:graduationWork.Transform.packetNum)
}

// .graduationWork.Vector3 position = 2;
inline bool Transform::has_position() const {
  return this != internal_default_instance() && position_ != NULL;
}
inline void Transform::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) delete position_;
  position_ = NULL;
}
inline const ::graduationWork::Vector3& Transform::position() const {
  // @@protoc_insertion_point(field_get:graduationWork.Transform.position)
  return position_ != NULL ? *position_
                         : *::graduationWork::Vector3::internal_default_instance();
}
inline ::graduationWork::Vector3* Transform::mutable_position() {
  
  if (position_ == NULL) {
    position_ = new ::graduationWork::Vector3;
  }
  // @@protoc_insertion_point(field_mutable:graduationWork.Transform.position)
  return position_;
}
inline ::graduationWork::Vector3* Transform::release_position() {
  // @@protoc_insertion_point(field_release:graduationWork.Transform.position)
  
  ::graduationWork::Vector3* temp = position_;
  position_ = NULL;
  return temp;
}
inline void Transform::set_allocated_position(::graduationWork::Vector3* position) {
  delete position_;
  position_ = position;
  if (position) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:graduationWork.Transform.position)
}

// .graduationWork.Vector3 rotation = 3;
inline bool Transform::has_rotation() const {
  return this != internal_default_instance() && rotation_ != NULL;
}
inline void Transform::clear_rotation() {
  if (GetArenaNoVirtual() == NULL && rotation_ != NULL) delete rotation_;
  rotation_ = NULL;
}
inline const ::graduationWork::Vector3& Transform::rotation() const {
  // @@protoc_insertion_point(field_get:graduationWork.Transform.rotation)
  return rotation_ != NULL ? *rotation_
                         : *::graduationWork::Vector3::internal_default_instance();
}
inline ::graduationWork::Vector3* Transform::mutable_rotation() {
  
  if (rotation_ == NULL) {
    rotation_ = new ::graduationWork::Vector3;
  }
  // @@protoc_insertion_point(field_mutable:graduationWork.Transform.rotation)
  return rotation_;
}
inline ::graduationWork::Vector3* Transform::release_rotation() {
  // @@protoc_insertion_point(field_release:graduationWork.Transform.rotation)
  
  ::graduationWork::Vector3* temp = rotation_;
  rotation_ = NULL;
  return temp;
}
inline void Transform::set_allocated_rotation(::graduationWork::Vector3* rotation) {
  delete rotation_;
  rotation_ = rotation;
  if (rotation) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:graduationWork.Transform.rotation)
}

// .graduationWork.Vector3 scale = 4;
inline bool Transform::has_scale() const {
  return this != internal_default_instance() && scale_ != NULL;
}
inline void Transform::clear_scale() {
  if (GetArenaNoVirtual() == NULL && scale_ != NULL) delete scale_;
  scale_ = NULL;
}
inline const ::graduationWork::Vector3& Transform::scale() const {
  // @@protoc_insertion_point(field_get:graduationWork.Transform.scale)
  return scale_ != NULL ? *scale_
                         : *::graduationWork::Vector3::internal_default_instance();
}
inline ::graduationWork::Vector3* Transform::mutable_scale() {
  
  if (scale_ == NULL) {
    scale_ = new ::graduationWork::Vector3;
  }
  // @@protoc_insertion_point(field_mutable:graduationWork.Transform.scale)
  return scale_;
}
inline ::graduationWork::Vector3* Transform::release_scale() {
  // @@protoc_insertion_point(field_release:graduationWork.Transform.scale)
  
  ::graduationWork::Vector3* temp = scale_;
  scale_ = NULL;
  return temp;
}
inline void Transform::set_allocated_scale(::graduationWork::Vector3* scale) {
  delete scale_;
  scale_ = scale;
  if (scale) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:graduationWork.Transform.scale)
}

// -------------------------------------------------------------------

// Message

// bytes message = 1;
inline void Message::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Message::message() const {
  // @@protoc_insertion_point(field_get:graduationWork.Message.message)
  return message_.GetNoArena();
}
inline void Message::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:graduationWork.Message.message)
}
#if LANG_CXX11
inline void Message::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:graduationWork.Message.message)
}
#endif
inline void Message::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:graduationWork.Message.message)
}
inline void Message::set_message(const void* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:graduationWork.Message.message)
}
inline ::std::string* Message::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:graduationWork.Message.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message::release_message() {
  // @@protoc_insertion_point(field_release:graduationWork.Message.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:graduationWork.Message.message)
}

// -------------------------------------------------------------------

// DataSize

// .graduationWork.DataType type = 1;
inline void DataSize::clear_type() {
  type_ = 0;
}
inline ::graduationWork::DataType DataSize::type() const {
  // @@protoc_insertion_point(field_get:graduationWork.DataSize.type)
  return static_cast< ::graduationWork::DataType >(type_);
}
inline void DataSize::set_type(::graduationWork::DataType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:graduationWork.DataSize.type)
}

// int32 size = 2;
inline void DataSize::clear_size() {
  size_ = 0;
}
inline ::google::protobuf::int32 DataSize::size() const {
  // @@protoc_insertion_point(field_get:graduationWork.DataSize.size)
  return size_;
}
inline void DataSize::set_size(::google::protobuf::int32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:graduationWork.DataSize.size)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace graduationWork

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::graduationWork::DataType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::graduationWork::DataType>() {
  return ::graduationWork::DataType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_graduationWork_2eproto__INCLUDED
